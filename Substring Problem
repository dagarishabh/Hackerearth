#include<bits/stdc++.h>
using namespace std;
int starta[1000000],enda[1000000],cnt=0,startb[1000000],endb[1000000],cnt1=0;
void lpsarr(char *pat,int m,int *lps);
void kmp(char *pat,char*txt,int mode)
{
    int m=strlen(pat);
    int n=strlen(txt);
    int lps[m];
    lpsarr(pat,m,lps);
    int i=0,j=0;
    while(i<n)
    {
        if(pat[j]==txt[i])
        i++,j++;
        if(j==m)
        {
            if(mode==1)
            {
                starta[cnt++]=i-j;
                enda[cnt-1]=i-1;
            }
            else if(mode==2)
            {
                startb[cnt1++]=i-j;
                endb[cnt1-1]=i-1;
            }
            j=lps[j-1];
        }
        else if(i<n && pat[j]!=txt[i])
        {
            if(j!=0)
            j=lps[j-1];
            else
            i++;
        }
    }
}
void lpsarr(char *pat,int m,int *lps)
{
    int i=1,l=0;
    lps[0]=0;
    while(i<m)
    {
        if(pat[i]==pat[l])
        {
            l++;
            lps[i]=l;
            i++;
        }
        else
        {
            if(l==0)
            {
                lps[i]=0;
                i++;
            }
            else
            l=lps[l-1];
        }
    }
}
int main()
{
    char s[500000],a[500000],b[500000];
    cin>>a>>b>>s;
    long long int ans=0,i,j,k=0,k1=0;
    kmp(a,s,1);
    kmp(b,s,2);
    int l=strlen(s);
    for(i=0;i<l;i++)
    {
        if(starta[k]<i && k<cnt)
        k++;
        if(k>=cnt)
        break;
        if(startb[k1]<i && k1<cnt1)
        k1++;
        if(k1>=cnt1)
        break;
        ans+=(l-max(enda[k],endb[k1]));
    }
    cout<<ans<<endl;
    return 0;
}
Language: C++14
